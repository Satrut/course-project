Index: Initdb/InitDB.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Initdb\r\n\r\nimport (\r\n\t\"course-project/types\"\r\n\t\"fmt\"\r\n\t\"github.com/jinzhu/gorm\"\r\n)\r\n\r\nfunc InitDB() *gorm.DB {\r\n\r\n\tdriverName := \"mysql\"\r\n\thost := \"127.0.0.1\"\r\n\tport := \"3306\"\r\n\tdatabase := \"course\"\r\n\tusername := \"root\"\r\n\tpassword := \"12345\"\r\n\tcharset := \"utf8\"\r\n\targs := fmt.Sprintf(\"%s:%s@tcp(%s:%s)/%s?charset=%s&parseTime=true\",\r\n\t\tusername,\r\n\t\tpassword,\r\n\t\thost,\r\n\t\tport,\r\n\t\tdatabase,\r\n\t\tcharset,\r\n\t)\r\n\r\n\tDB, err := gorm.Open(driverName, args)\r\n\tif err != nil {\r\n\t\tpanic(\"failed to connect database,err:\" + err.Error())\r\n\t}\r\n\r\n\t//自动创建数据表\r\n\tDB.AutoMigrate(&types.TMember{})\r\n\tDB.AutoMigrate(&types.TCourse{})\r\n\r\n\treturn DB\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Initdb/InitDB.go b/Initdb/InitDB.go
--- a/Initdb/InitDB.go	(revision e939d6969817a944f1de970ced8efae9cdbd4407)
+++ b/Initdb/InitDB.go	(date 1644373069308)
@@ -14,8 +14,8 @@
 	database := "course"
 	username := "root"
 	password := "12345"
-	charset := "utf8"
-	args := fmt.Sprintf("%s:%s@tcp(%s:%s)/%s?charset=%s&parseTime=true",
+	charset := "utf8mb4"
+	args := fmt.Sprintf("%s:%s@tcp(%s:%s)/%s?charset=%s&parseTime=true&loc=Local",
 		username,
 		password,
 		host,
Index: main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main\r\n\r\nimport (\r\n\t\"course-project/Initdb\"\r\n\t\"course-project/course_arrangement\"\r\n\t\"github.com/gin-gonic/gin\"\r\n\t_ \"github.com/jinzhu/gorm/dialects/mysql\"\r\n)\r\n\r\nfunc sayHello(c *gin.Context) {\r\n\tc.JSON(200, gin.H{\r\n\t\t\"message\": \"Hello golang!\",\r\n\t})\r\n}\r\n\r\nfunc main() {\r\n\tdb := Initdb.InitDB()\r\n\tdefer db.Close() //延时关闭\r\n\r\n\tr := gin.Default()\r\n\tg := r.Group(\"/api/v1\")\r\n\r\n\t// 成员管理\r\n\tg.POST(\"/member/create\")\r\n\tg.GET(\"/member\")\r\n\tg.GET(\"/member/list\")\r\n\tg.POST(\"/member/update\")\r\n\tg.POST(\"/member/delete\")\r\n\r\n\t// 登录\r\n\r\n\tg.POST(\"/auth/login\")\r\n\tg.POST(\"/auth/logout\")\r\n\tg.GET(\"/auth/whoami\")\r\n\r\n\t// 排课\r\n\tg.POST(\"/course/create\", course_arrangement.CreateCourse)\r\n\tg.GET(\"/course/get\", course_arrangement.GetCourse)\r\n\r\n\tg.POST(\"/teacher/bind_course\", course_arrangement.BindCourse)\r\n\tg.POST(\"/teacher/unbind_course\", course_arrangement.UnbindCourse)\r\n\tg.GET(\"/teacher/get_course\", course_arrangement.GetTeacherCourse)\r\n\tg.POST(\"/course/schedule\")\r\n\r\n\t// 抢课\r\n\tg.POST(\"/student/book_course\")\r\n\tg.GET(\"/student/course\")\r\n\r\n\t//r.Run()\r\n\tpanic(r.Run()) // listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\")\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.go b/main.go
--- a/main.go	(revision e939d6969817a944f1de970ced8efae9cdbd4407)
+++ b/main.go	(date 1644656409675)
@@ -3,6 +3,7 @@
 import (
 	"course-project/Initdb"
 	"course-project/course_arrangement"
+	"course-project/member"
 	"github.com/gin-gonic/gin"
 	_ "github.com/jinzhu/gorm/dialects/mysql"
 )
@@ -21,10 +22,10 @@
 	g := r.Group("/api/v1")
 
 	// 成员管理
-	g.POST("/member/create")
+	g.POST("/member/create", member.CreateMember)
 	g.GET("/member")
 	g.GET("/member/list")
-	g.POST("/member/update")
+	g.POST("/member/update", member.UpdateMember)
 	g.POST("/member/delete")
 
 	// 登录
@@ -37,9 +38,9 @@
 	g.POST("/course/create", course_arrangement.CreateCourse)
 	g.GET("/course/get", course_arrangement.GetCourse)
 
-	g.POST("/teacher/bind_course", course_arrangement.BindCourse)
-	g.POST("/teacher/unbind_course", course_arrangement.UnbindCourse)
-	g.GET("/teacher/get_course", course_arrangement.GetTeacherCourse)
+	g.POST("/teacher/bind_course")
+	g.POST("/teacher/unbind_course")
+	g.GET("/teacher/get_course")
 	g.POST("/course/schedule")
 
 	// 抢课
Index: types/types.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package types\r\n\r\n// 说明：\r\n// 1. 所提到的「位数」均以字节长度为准\r\n// 2. 所有的 ID 均为 int64（以 string 方式表现）\r\n\r\n// 通用结构\r\n\r\ntype ErrNo int\r\n\r\nconst (\r\n\tOK                 ErrNo = 0\r\n\tParamInvalid       ErrNo = 1  // 参数不合法\r\n\tUserHasExisted     ErrNo = 2  // 该 Username 已存在\r\n\tUserHasDeleted     ErrNo = 3  // 用户已删除\r\n\tUserNotExisted     ErrNo = 4  // 用户不存在\r\n\tWrongPassword      ErrNo = 5  // 密码错误\r\n\tLoginRequired      ErrNo = 6  // 用户未登录\r\n\tCourseNotAvailable ErrNo = 7  // 课程已满\r\n\tCourseHasBound     ErrNo = 8  // 课程已绑定过\r\n\tCourseNotBind      ErrNo = 9  // 课程未绑定过\r\n\tPermDenied         ErrNo = 10 // 没有操作权限\r\n\tStudentNotExisted  ErrNo = 11 // 学生不存在\r\n\tCourseNotExisted   ErrNo = 12 // 课程不存在\r\n\tStudentHasNoCourse ErrNo = 13 // 学生没有课程\r\n\tStudentHasCourse   ErrNo = 14 // 学生有课程\r\n\r\n\tUnknownError ErrNo = 255 // 未知错误\r\n)\r\n\r\ntype ResponseMeta struct {\r\n\tCode ErrNo\r\n}\r\n\r\ntype TMember struct {\r\n\tUserID   string `gorm:\"primary_key\"`\r\n\tNickname string\r\n\tUsername string\r\n\tUserType UserType\r\n}\r\n\r\ntype TCourse struct {\r\n\tCourseID  string `gorm:\"primary_key\"`\r\n\tName      string\r\n\tCap       int\r\n\tTeacherID string\r\n}\r\n\r\n// -----------------------------------\r\n\r\n// 成员管理\r\n\r\ntype UserType int\r\n\r\nconst (\r\n\tAdmin   UserType = 1\r\n\tStudent UserType = 2\r\n\tTeacher UserType = 3\r\n)\r\n\r\n// 系统内置管理员账号\r\n// 账号名：JudgeAdmin 密码：JudgePassword2022\r\n\r\n// 创建成员\r\n// 参数不合法返回 ParamInvalid\r\n\r\n// 只有管理员才能添加\r\n\r\ntype CreateMemberRequest struct {\r\n\tNickname string   // required，不小于 4 位 不超过 20 位\r\n\tUsername string   // required，只支持大小写，长度不小于 8 位 不超过 20 位\r\n\tPassword string   // required，同时包括大小写、数字，长度不少于 8 位 不超过 20 位\r\n\tUserType UserType // required, 枚举值\r\n}\r\n\r\ntype CreateMemberResponse struct {\r\n\tCode ErrNo\r\n\tData struct {\r\n\t\tUserID string // int64 范围\r\n\t}\r\n}\r\n\r\n// 获取成员信息\r\n\r\ntype GetMemberRequest struct {\r\n\tUserID string\r\n}\r\n\r\n// 如果用户已删除请返回已删除状态码，不存在请返回不存在状态码\r\n\r\ntype GetMemberResponse struct {\r\n\tCode ErrNo\r\n\tData TMember\r\n}\r\n\r\n// 批量获取成员信息\r\n\r\ntype GetMemberListRequest struct {\r\n\tOffset int\r\n\tLimit  int\r\n}\r\n\r\ntype GetMemberListResponse struct {\r\n\tCode ErrNo\r\n\tData struct {\r\n\t\tMemberList []TMember\r\n\t}\r\n}\r\n\r\n// 更新成员信息\r\n\r\ntype UpdateMemberRequest struct {\r\n\tUserID   string\r\n\tNickname string\r\n}\r\n\r\ntype UpdateMemberResponse struct {\r\n\tCode ErrNo\r\n}\r\n\r\n// 删除成员信息\r\n// 成员删除后，该成员不能够被登录且不应该不可见，ID 不可复用\r\n\r\ntype DeleteMemberRequest struct {\r\n\tUserID string\r\n}\r\n\r\ntype DeleteMemberResponse struct {\r\n\tCode ErrNo\r\n}\r\n\r\n// ----------------------------------------\r\n// 登录\r\n\r\ntype LoginRequest struct {\r\n\tUsername string\r\n\tPassword string\r\n}\r\n\r\n// 登录成功后需要 Set-Cookie(\"camp-session\", ${value})\r\n// 密码错误范围密码错误状态码\r\n\r\ntype LoginResponse struct {\r\n\tCode ErrNo\r\n\tData struct {\r\n\t\tUserID string\r\n\t}\r\n}\r\n\r\n// 登出\r\n\r\ntype LogoutRequest struct{}\r\n\r\n// 登出成功需要删除 Cookie\r\n\r\ntype LogoutResponse struct {\r\n\tCode ErrNo\r\n}\r\n\r\n// WhoAmI 接口，用来测试是否登录成功，只有此接口需要带上 Cookie\r\n\r\ntype WhoAmIRequest struct {\r\n}\r\n\r\n// 用户未登录请返回用户未登录状态码\r\n\r\ntype WhoAmIResponse struct {\r\n\tCode ErrNo\r\n\tData TMember\r\n}\r\n\r\n// -------------------------------------\r\n// 排课\r\n\r\n// 创建课程\r\n// Method: Post\r\ntype CreateCourseRequest struct {\r\n\tName string\r\n\tCap  int\r\n}\r\n\r\ntype CreateCourseResponse struct {\r\n\tCode ErrNo\r\n\tData struct {\r\n\t\tCourseID string\r\n\t}\r\n}\r\n\r\n// 获取课程\r\n// Method: Get\r\ntype GetCourseRequest struct {\r\n\tCourseID string\r\n}\r\n\r\ntype GetCourseResponse struct {\r\n\tCode ErrNo\r\n\tData TCourse\r\n}\r\n\r\n// 老师绑定课程\r\n// Method： Post\r\n// 注：这里的 teacherID 不需要做已落库校验\r\n// 一个老师可以绑定多个课程 , 不过，一个课程只能绑定在一个老师下面\r\ntype BindCourseRequest struct {\r\n\tCourseID  string\r\n\tTeacherID string\r\n}\r\n\r\ntype BindCourseResponse struct {\r\n\tCode ErrNo\r\n}\r\n\r\n// 老师解绑课程\r\n// Method： Post\r\ntype UnbindCourseRequest struct {\r\n\tCourseID  string\r\n\tTeacherID string\r\n}\r\n\r\ntype UnbindCourseResponse struct {\r\n\tCode ErrNo\r\n}\r\n\r\n// 获取老师下所有课程\r\n// Method：Get\r\ntype GetTeacherCourseRequest struct {\r\n\tTeacherID string\r\n}\r\n\r\ntype GetTeacherCourseResponse struct {\r\n\tCode ErrNo\r\n\tData struct {\r\n\t\tCourseList []*TCourse\r\n\t}\r\n}\r\n\r\n// 排课求解器，使老师绑定课程的最优解， 老师有且只能绑定一个课程\r\n// Method： Post\r\ntype ScheduleCourseRequest struct {\r\n\tTeacherCourseRelationShip map[string][]string // key 为 teacherID , val 为老师期望绑定的课程 courseID 数组\r\n}\r\n\r\ntype ScheduleCourseResponse struct {\r\n\tCode ErrNo\r\n\tData map[string]string // key 为 teacherID , val 为老师最终绑定的课程 courseID\r\n}\r\n\r\ntype BookCourseRequest struct {\r\n\tStudentID string\r\n\tCourseID  string\r\n}\r\n\r\n// 课程已满返回 CourseNotAvailable\r\n\r\ntype BookCourseResponse struct {\r\n\tCode ErrNo\r\n}\r\n\r\ntype GetStudentCourseRequest struct {\r\n\tStudentID string\r\n}\r\n\r\ntype GetStudentCourseResponse struct {\r\n\tCode ErrNo\r\n\tData struct {\r\n\t\tCourseList []TCourse\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/types/types.go b/types/types.go
--- a/types/types.go	(revision e939d6969817a944f1de970ced8efae9cdbd4407)
+++ b/types/types.go	(date 1644373111075)
@@ -36,6 +36,7 @@
 	UserID   string `gorm:"primary_key"`
 	Nickname string
 	Username string
+	Password string
 	UserType UserType
 }
 
Index: login/login.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package login\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/login/login.go b/login/login.go
--- a/login/login.go	(revision e939d6969817a944f1de970ced8efae9cdbd4407)
+++ b/login/login.go	(date 1644373111079)
@@ -1,1 +1,44 @@
 package login
+
+import (
+	"course-project/Initdb"
+	"course-project/types"
+	"github.com/gin-gonic/gin"
+	"net/http"
+)
+
+func Login(c *gin.Context) {
+	request := types.LoginRequest{}
+	err := c.BindJSON(&request)
+	if err != nil {
+		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
+		return
+	}
+	tmember := types.TMember{Username: request.Username, Password: request.Password}
+	db := Initdb.InitDB()
+	if result := db.First(&tmember); result.Error != nil {
+		response := types.LoginResponse{
+			Code: types.WrongPassword,
+			Data: struct{ UserID string }{UserID:"NULL"},
+		}
+		c.JSON(http.StatusOK, response)
+	}else{
+		response := types.LoginResponse{
+			Code: types.OK,
+			Data: struct{ UserID string }{UserID: tmember.UserID},
+		}
+		c.JSON(http.StatusOK, response)
+	}
+}
+
+func Logout(c *gin.Context) {
+	c.JSON(200, gin.H{
+		"message": "Hello golang!",
+	})
+}
+
+func WhoAmI(c *gin.Context) {
+	c.JSON(200, gin.H{
+		"message": "Hello golang!",
+	})
+}
Index: course_arrangement/course_arrangement.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package course_arrangement\r\n\r\nimport (\r\n\t\"course-project/Initdb\"\r\n\t\"course-project/types\"\r\n\t\"github.com/gin-gonic/gin\"\r\n\t\"github.com/pborman/uuid\"\r\n)\r\n\r\nfunc CreateCourse(c *gin.Context) {\r\n\trequest := types.CreateCourseRequest{} //建立请求的格式（还没有数据）\r\n\tif c.BindJSON(&request) != nil {       //将从前端获取的数据导入到request结构体中，以及如果参数不合法的处理情况\r\n\t\tresponse := types.CreateCourseResponse{\r\n\t\t\tCode: types.ParamInvalid,\r\n\t\t\tData: struct{ CourseID string }{CourseID: \"\"},\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t\treturn\r\n\t}\r\n\ttcourse := types.TCourse{CourseID: uuid.NewRandom().String(), Name: request.Name, Cap: request.Cap} //对应数据库中的实体\r\n\tdb := Initdb.InitDB()                                                                               //与数据库的链接\r\n\tdb.Create(&tcourse)                                                                                 //在数据库中创建实体\r\n\tresponse := types.CreateCourseResponse{                                                             //要返回给前端的数据\r\n\t\tCode: types.OK,\r\n\t\tData: struct{ CourseID string }{CourseID: tcourse.CourseID},\r\n\t}\r\n\tc.JSON(200, response) //将数据返回\r\n}\r\n\r\nfunc GetCourse(c *gin.Context) {\r\n\ttcourse := types.TCourse{}                             //对应数据库中的实体类\r\n\ttcourse.CourseID = c.Query(\"CourseID\")                 //从前端获取数据,get方法\r\n\tdb := Initdb.InitDB()                                  //与数据库的链接\r\n\tif result := db.First(&tcourse); result.Error != nil { //从数据库中进行数据查找，这是如果没有成功找到的情况\r\n\t\tresponse := types.GetCourseResponse{\r\n\t\t\tCode: types.CourseNotExisted,\r\n\t\t\tData: tcourse,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t} else { //成功找到的情况\r\n\t\tresponse := types.GetCourseResponse{\r\n\t\t\tCode: types.OK,\r\n\t\t\tData: tcourse,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t}\r\n}\r\n\r\nfunc BindCourse(c *gin.Context) {\r\n\trequest := types.BindCourseRequest{}\r\n\tif c.BindJSON(&request) != nil || request.TeacherID == \"\" || request.CourseID == \"\" { //如果参数不合法\r\n\t\tresponse := types.BindCourseResponse{\r\n\t\t\tCode: types.ParamInvalid,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t\treturn\r\n\t}\r\n\ttcourse := types.TCourse{CourseID: request.CourseID}\r\n\tdb := Initdb.InitDB()\r\n\tif result := db.First(&tcourse); result.Error != nil { //如果课程不存在\r\n\t\tresponse := types.BindCourseResponse{\r\n\t\t\tCode: types.CourseNotExisted,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t\treturn\r\n\t} else if tcourse.TeacherID != \"\" { //如果课程已经被绑定过\r\n\t\tresponse := types.BindCourseResponse{\r\n\t\t\tCode: types.CourseHasBound,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t\treturn\r\n\t} else {\r\n\t\tdb.Model(&tcourse).Update(\"TeacherID\", request.TeacherID)\r\n\t\tresponse := types.BindCourseResponse{\r\n\t\t\tCode: types.OK,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t}\r\n}\r\n\r\nfunc UnbindCourse(c *gin.Context) {\r\n\trequest := types.UnbindCourseRequest{}\r\n\tif c.BindJSON(&request) != nil || request.TeacherID == \"\" || request.CourseID == \"\" { //如果参数不合法\r\n\t\tresponse := types.UnbindCourseResponse{\r\n\t\t\tCode: types.ParamInvalid,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t\treturn\r\n\t}\r\n\ttcourse := types.TCourse{CourseID: request.CourseID}\r\n\tdb := Initdb.InitDB()\r\n\tif result := db.First(&tcourse); result.Error != nil { //如果课程不存在\r\n\t\tresponse := types.UnbindCourseResponse{\r\n\t\t\tCode: types.CourseNotExisted,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t\treturn\r\n\t} else if tcourse.TeacherID != \"\" && tcourse.TeacherID != request.TeacherID { //如果课程已经被绑定过\r\n\t\tresponse := types.UnbindCourseResponse{\r\n\t\t\tCode: types.CourseHasBound,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t\treturn\r\n\t} else if tcourse.TeacherID == \"\" {\r\n\t\tresponse := types.UnbindCourseResponse{\r\n\t\t\tCode: types.CourseNotBind,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t} else {\r\n\t\tdb.Model(&tcourse).Update(\"TeacherID\", \"\")\r\n\t\tresponse := types.UnbindCourseResponse{\r\n\t\t\tCode: types.OK,\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t}\r\n}\r\n\r\nfunc GetTeacherCourse(c *gin.Context) {\r\n\tteacher_id := c.Query(\"TeacherID\")\r\n\tvar tcourses []*types.TCourse\r\n\tif teacher_id == \"\" { //如果参数不合法\r\n\t\tresponse := types.GetTeacherCourseResponse{\r\n\t\t\tCode: types.ParamInvalid,\r\n\t\t\tData: struct{ CourseList []*types.TCourse }{CourseList: tcourses},\r\n\t\t}\r\n\t\tc.JSON(200, response)\r\n\t\treturn\r\n\t}\r\n\tdb := Initdb.InitDB()\r\n\tdb.Where(`teacher_id = ?`, teacher_id).Find(&tcourses)\r\n\tresponse := types.GetTeacherCourseResponse{\r\n\t\tCode: types.OK,\r\n\t\tData: struct{ CourseList []*types.TCourse }{CourseList: tcourses},\r\n\t}\r\n\tc.JSON(200, response)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/course_arrangement/course_arrangement.go b/course_arrangement/course_arrangement.go
--- a/course_arrangement/course_arrangement.go	(revision e939d6969817a944f1de970ced8efae9cdbd4407)
+++ b/course_arrangement/course_arrangement.go	(date 1644373097260)
@@ -8,36 +8,29 @@
 )
 
 func CreateCourse(c *gin.Context) {
-	request := types.CreateCourseRequest{} //建立请求的格式（还没有数据）
-	if c.BindJSON(&request) != nil {       //将从前端获取的数据导入到request结构体中，以及如果参数不合法的处理情况
-		response := types.CreateCourseResponse{
-			Code: types.ParamInvalid,
-			Data: struct{ CourseID string }{CourseID: ""},
-		}
-		c.JSON(200, response)
-		return
-	}
-	tcourse := types.TCourse{CourseID: uuid.NewRandom().String(), Name: request.Name, Cap: request.Cap} //对应数据库中的实体
-	db := Initdb.InitDB()                                                                               //与数据库的链接
-	db.Create(&tcourse)                                                                                 //在数据库中创建实体
-	response := types.CreateCourseResponse{                                                             //要返回给前端的数据
+	request := types.CreateCourseRequest{}
+	c.BindJSON(&request)
+	tcourse := types.TCourse{CourseID: uuid.NewRandom().String(), Name: request.Name, Cap: request.Cap}
+	db := Initdb.InitDB()
+	db.Create(&tcourse)
+	response := types.CreateCourseResponse{
 		Code: types.OK,
 		Data: struct{ CourseID string }{CourseID: tcourse.CourseID},
 	}
-	c.JSON(200, response) //将数据返回
+	c.JSON(200, response)
 }
 
 func GetCourse(c *gin.Context) {
-	tcourse := types.TCourse{}                             //对应数据库中的实体类
-	tcourse.CourseID = c.Query("CourseID")                 //从前端获取数据,get方法
-	db := Initdb.InitDB()                                  //与数据库的链接
-	if result := db.First(&tcourse); result.Error != nil { //从数据库中进行数据查找，这是如果没有成功找到的情况
+	tcourse := types.TCourse{}
+	tcourse.CourseID = c.Query("CourseID")
+	db := Initdb.InitDB()
+	if result := db.First(&tcourse); result.Error != nil {
 		response := types.GetCourseResponse{
 			Code: types.CourseNotExisted,
 			Data: tcourse,
 		}
 		c.JSON(200, response)
-	} else { //成功找到的情况
+	} else {
 		response := types.GetCourseResponse{
 			Code: types.OK,
 			Data: tcourse,
@@ -45,92 +38,3 @@
 		c.JSON(200, response)
 	}
 }
-
-func BindCourse(c *gin.Context) {
-	request := types.BindCourseRequest{}
-	if c.BindJSON(&request) != nil || request.TeacherID == "" || request.CourseID == "" { //如果参数不合法
-		response := types.BindCourseResponse{
-			Code: types.ParamInvalid,
-		}
-		c.JSON(200, response)
-		return
-	}
-	tcourse := types.TCourse{CourseID: request.CourseID}
-	db := Initdb.InitDB()
-	if result := db.First(&tcourse); result.Error != nil { //如果课程不存在
-		response := types.BindCourseResponse{
-			Code: types.CourseNotExisted,
-		}
-		c.JSON(200, response)
-		return
-	} else if tcourse.TeacherID != "" { //如果课程已经被绑定过
-		response := types.BindCourseResponse{
-			Code: types.CourseHasBound,
-		}
-		c.JSON(200, response)
-		return
-	} else {
-		db.Model(&tcourse).Update("TeacherID", request.TeacherID)
-		response := types.BindCourseResponse{
-			Code: types.OK,
-		}
-		c.JSON(200, response)
-	}
-}
-
-func UnbindCourse(c *gin.Context) {
-	request := types.UnbindCourseRequest{}
-	if c.BindJSON(&request) != nil || request.TeacherID == "" || request.CourseID == "" { //如果参数不合法
-		response := types.UnbindCourseResponse{
-			Code: types.ParamInvalid,
-		}
-		c.JSON(200, response)
-		return
-	}
-	tcourse := types.TCourse{CourseID: request.CourseID}
-	db := Initdb.InitDB()
-	if result := db.First(&tcourse); result.Error != nil { //如果课程不存在
-		response := types.UnbindCourseResponse{
-			Code: types.CourseNotExisted,
-		}
-		c.JSON(200, response)
-		return
-	} else if tcourse.TeacherID != "" && tcourse.TeacherID != request.TeacherID { //如果课程已经被绑定过
-		response := types.UnbindCourseResponse{
-			Code: types.CourseHasBound,
-		}
-		c.JSON(200, response)
-		return
-	} else if tcourse.TeacherID == "" {
-		response := types.UnbindCourseResponse{
-			Code: types.CourseNotBind,
-		}
-		c.JSON(200, response)
-	} else {
-		db.Model(&tcourse).Update("TeacherID", "")
-		response := types.UnbindCourseResponse{
-			Code: types.OK,
-		}
-		c.JSON(200, response)
-	}
-}
-
-func GetTeacherCourse(c *gin.Context) {
-	teacher_id := c.Query("TeacherID")
-	var tcourses []*types.TCourse
-	if teacher_id == "" { //如果参数不合法
-		response := types.GetTeacherCourseResponse{
-			Code: types.ParamInvalid,
-			Data: struct{ CourseList []*types.TCourse }{CourseList: tcourses},
-		}
-		c.JSON(200, response)
-		return
-	}
-	db := Initdb.InitDB()
-	db.Where(`teacher_id = ?`, teacher_id).Find(&tcourses)
-	response := types.GetTeacherCourseResponse{
-		Code: types.OK,
-		Data: struct{ CourseList []*types.TCourse }{CourseList: tcourses},
-	}
-	c.JSON(200, response)
-}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"ALL\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"17db3387-e695-41f3-9733-041f718423a9\" name=\"Changes\" comment=\"dq 修改GetCourse\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/course_arrangement/course_arrangement.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/course_arrangement/course_arrangement.go\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.go\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Go File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"GOROOT\" url=\"file://$PROJECT_DIR$/../../../../1_Environment/go\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"GoLibraries\">\r\n    <option name=\"indexEntireGoPath\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"24YgW49s7gOE0RnSHywM1lfVC0e\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"DefaultGoTemplateProperty\" value=\"Go File\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"go.format.on.save.advertiser.fired\" value=\"true\" />\r\n    <property name=\"go.formatter.settings.were.checked\" value=\"true\" />\r\n    <property name=\"go.import.settings.migrated\" value=\"true\" />\r\n    <property name=\"go.modules.go.list.on.any.changes.was.set\" value=\"true\" />\r\n    <property name=\"go.sdk.automatically.set\" value=\"true\" />\r\n    <property name=\"go.watchers.conflict.with.on.save.actions.check.performed\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/Initdb\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\1 coding\\Go\\course-system\\course-project\\Initdb\" />\r\n      <recent name=\"D:\\1 coding\\Go\\course-system\\course-project\" />\r\n      <recent name=\"D:\\1 coding\\Go\\course-system\\course-project\\types\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\1 coding\\Go\\course-system\\course-project\\type\" />\r\n      <recent name=\"D:\\1 coding\\Go\\course-system\\course-project\\types_2\" />\r\n      <recent name=\"D:\\1 coding\\Go\\course-system\\course-project\\types_1\" />\r\n      <recent name=\"D:\\1 coding\\Go\\course-system\\course-project\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\">\r\n      <module name=\"course-project\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"course-project\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"go build course-project\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"course-project\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"course-project\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$/main.go\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"GoTestRunConfiguration\" factoryName=\"Go Test\">\r\n      <module name=\"course-project\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"DIRECTORY\" />\r\n      <package value=\"course-project\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <framework value=\"gotest\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Go Build.go build course-project\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"dq修改type\" />\r\n    <MESSAGE value=\"dq拆分type\" />\r\n    <MESSAGE value=\"dq 又把type拼接了回来\" />\r\n    <MESSAGE value=\"dq 修改GetCourse\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"dq 修改GetCourse\" />\r\n  </component>\r\n  <component name=\"VgoProject\">\r\n    <integration-enabled>true</integration-enabled>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <watches-manager>\r\n      <configuration name=\"GoApplicationRunConfiguration\">\r\n        <watch expression=\"tcourse\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e939d6969817a944f1de970ced8efae9cdbd4407)
+++ b/.idea/workspace.xml	(date 1644655124371)
@@ -4,10 +4,15 @@
     <option name="autoReloadType" value="ALL" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="17db3387-e695-41f3-9733-041f718423a9" name="Changes" comment="dq 修改GetCourse">
+    <list default="true" id="17db3387-e695-41f3-9733-041f718423a9" name="Changes" comment="Changes">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Initdb/InitDB.go" beforeDir="false" afterPath="$PROJECT_DIR$/Initdb/InitDB.go" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/course_arrangement/course_arrangement.go" beforeDir="false" afterPath="$PROJECT_DIR$/course_arrangement/course_arrangement.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/login/login.go" beforeDir="false" afterPath="$PROJECT_DIR$/login/login.go" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/types/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/types/types.go" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -21,7 +26,7 @@
       </list>
     </option>
   </component>
-  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../1_Environment/go" />
+  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../Program Files/Go" />
   <component name="Git.Settings">
     <option name="PUSH_AUTO_UPDATE" value="true" />
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
@@ -50,6 +55,9 @@
     <property name="go.sdk.automatically.set" value="true" />
     <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$/Initdb" />
+    <property name="node.js.detected.package.eslint" value="true" />
+    <property name="node.js.selected.package.eslint" value="(autodetect)" />
+    <property name="node.js.selected.package.tslint" value="(autodetect)" />
   </component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
@@ -93,11 +101,6 @@
       <framework value="gotest" />
       <method v="2" />
     </configuration>
-    <recent_temporary>
-      <list>
-        <item itemvalue="Go Build.go build course-project" />
-      </list>
-    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TypeScriptGeneratedFilesManager">
@@ -124,11 +127,4 @@
   <component name="VgoProject">
     <integration-enabled>true</integration-enabled>
   </component>
-  <component name="XDebuggerManager">
-    <watches-manager>
-      <configuration name="GoApplicationRunConfiguration">
-        <watch expression="tcourse" />
-      </configuration>
-    </watches-manager>
-  </component>
 </project>
\ No newline at end of file
Index: go.sum
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>github.com/PuerkitoBio/goquery v1.5.1/go.mod h1:GsLWisAFVj4WgDibEWF4pvYnkVQBpKBKeU+7zCJoLcc=\r\ngithub.com/andybalholm/cascadia v1.1.0/go.mod h1:GsXiBklL0woXo1j/WYWtSYYC4ouU9PqHO0sqidkEA4Y=\r\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\r\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\r\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\r\ngithub.com/denisenkom/go-mssqldb v0.0.0-20191124224453-732737034ffd/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=\r\ngithub.com/erikstmartin/go-testdb v0.0.0-20160219214506-8d10e4a1bae5/go.mod h1:a2zkGnVExMxdzMo3M0Hi/3sEU+cWnZpSni0O6/Yb/P0=\r\ngithub.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=\r\ngithub.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=\r\ngithub.com/gin-gonic/gin v1.7.7 h1:3DoBmSbJbZAWqXJC3SLjAPfutPJJRN1U5pALB7EeTTs=\r\ngithub.com/gin-gonic/gin v1.7.7/go.mod h1:axIBovoeJpVj8S3BwE0uPMTeReE4+AfFtqpqaZ1qq1U=\r\ngithub.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=\r\ngithub.com/go-playground/locales v0.13.0/go.mod h1:taPMhCMXrRLJO55olJkUXHZBHCxTMfnGwq/HNwmWNS8=\r\ngithub.com/go-playground/locales v0.14.0 h1:u50s323jtVGugKlcYeyzC0etD1HifMjqmJqb8WugfUU=\r\ngithub.com/go-playground/locales v0.14.0/go.mod h1:sawfccIbzZTqEDETgFXqTho0QybSa7l++s0DH+LDiLs=\r\ngithub.com/go-playground/universal-translator v0.17.0/go.mod h1:UkSxE5sNxxRwHyU+Scu5vgOQjsIJAF8j9muTVoKLVtA=\r\ngithub.com/go-playground/universal-translator v0.18.0 h1:82dyy6p4OuJq4/CByFNOn/jYrnRPArHwAcmLoJZxyho=\r\ngithub.com/go-playground/universal-translator v0.18.0/go.mod h1:UvRDBj+xPUEGrFYl+lu/H90nyDXpg0fqeB/AQUGNTVA=\r\ngithub.com/go-playground/validator/v10 v10.4.1/go.mod h1:nlOn6nFhuKACm19sB/8EGNn9GlaMV7XkbRSipzJ0Ii4=\r\ngithub.com/go-playground/validator/v10 v10.10.0 h1:I7mrTYv78z8k8VXa/qJlOlEXn/nBh+BF8dHX5nt/dr0=\r\ngithub.com/go-playground/validator/v10 v10.10.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=\r\ngithub.com/go-sql-driver/mysql v1.5.0 h1:ozyZYNQW3x3HtqT1jira07DN2PArx2v7/mN66gGcHOs=\r\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\r\ngithub.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=\r\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\r\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\r\ngithub.com/golang/protobuf v1.5.2 h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=\r\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\r\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\r\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\r\ngithub.com/google/uuid v1.0.0 h1:b4Gk+7WdP/d3HZH8EJsZpvV7EtDOgaZLtnaNGIu1adA=\r\ngithub.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\r\ngithub.com/jinzhu/gorm v1.9.16 h1:+IyIjPEABKRpsu/F8OvDPy9fyQlgsg2luMV2ZIH5i5o=\r\ngithub.com/jinzhu/gorm v1.9.16/go.mod h1:G3LB3wezTOWM2ITLzPxEXgSkOXAntiLHS7UdBefADcs=\r\ngithub.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=\r\ngithub.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=\r\ngithub.com/jinzhu/now v1.0.1/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=\r\ngithub.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\r\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\r\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\r\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\r\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\r\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\r\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\r\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\r\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\r\ngithub.com/leodido/go-urn v1.2.0/go.mod h1:+8+nEpDfqqsY+g338gtMEUOtuK+4dEMhiQEgxpxOKII=\r\ngithub.com/leodido/go-urn v1.2.1 h1:BqpAaACuzVSgi/VLzGZIobT2z4v53pjosyNd9Yv6n/w=\r\ngithub.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=\r\ngithub.com/lib/pq v1.1.1/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\r\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\r\ngithub.com/mattn/go-isatty v0.0.14 h1:yVuAays6BHfxijgZPzw+3Zlu5yQgKGP2/hcQbHb7S9Y=\r\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\r\ngithub.com/mattn/go-sqlite3 v1.14.0/go.mod h1:JIl7NbARA7phWnGvh0LKTyg7S9BA+6gx71ShQilpsus=\r\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\r\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\r\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\r\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\r\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\r\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\r\ngithub.com/pborman/uuid v1.2.1 h1:+ZZIw58t/ozdjRaXh/3awHfmWRbzYxJoAdNJxe/3pvw=\r\ngithub.com/pborman/uuid v1.2.1/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=\r\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\r\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\r\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\r\ngithub.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=\r\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\r\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\r\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\r\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\r\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\r\ngithub.com/ugorji/go v1.1.7/go.mod h1:kZn38zHttfInRq0xu/PH0az30d+z6vm202qpg1oXVMw=\r\ngithub.com/ugorji/go v1.2.6 h1:tGiWC9HENWE2tqYycIqFTNorMmFRVhNwCpDOpWqnk8E=\r\ngithub.com/ugorji/go v1.2.6/go.mod h1:anCg0y61KIhDlPZmnH+so+RQbysYVyDko0IMgJv0Nn0=\r\ngithub.com/ugorji/go/codec v1.1.7/go.mod h1:Ax+UKWsSmolVDwsd+7N3ZtXu+yMGCf907BLYF3GoBXY=\r\ngithub.com/ugorji/go/codec v1.2.6 h1:7kbGefxLoDBuYXOms4yD7223OpNMMPNPZxXk5TvFcyQ=\r\ngithub.com/ugorji/go/codec v1.2.6/go.mod h1:V6TCNZ4PHqoHGFZuSG1W8nrCzzdgA2DozYxWFFpvxTw=\r\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\r\ngolang.org/x/crypto v0.0.0-20190325154230-a5d413f7728c/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\r\ngolang.org/x/crypto v0.0.0-20191205180655-e7c4368fe9dd/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\r\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\r\ngolang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\r\ngolang.org/x/crypto v0.0.0-20220131195533-30dcbda58838 h1:71vQrMauZZhcTVK6KdYM+rklehEEwb3E+ZhaE5jrPrE=\r\ngolang.org/x/crypto v0.0.0-20220131195533-30dcbda58838/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\r\ngolang.org/x/net v0.0.0-20180218175443-cbe0f9307d01/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\r\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\r\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\r\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\r\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\r\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\r\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\r\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\r\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\r\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\r\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\r\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\r\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\r\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\r\ngolang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\r\ngolang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27 h1:XDXtA5hveEEV8JB2l7nhMTp3t3cHp9ZpwcdjqyEWLlo=\r\ngolang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\r\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\r\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\r\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\r\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\r\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\r\ngolang.org/x/text v0.3.7 h1:olpwvP2KacW1ZWvsR7uQhoyTYvKAupfQrRGBFM352Gk=\r\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\r\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\r\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\r\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\r\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\r\ngoogle.golang.org/protobuf v1.27.1 h1:SnqbnDw1V7RiZcXPx5MEeqPv2s79L9i7BJUlG/+RurQ=\r\ngoogle.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\r\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\r\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\r\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\r\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\r\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\r\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\r\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\r\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\r\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\r\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.sum b/go.sum
--- a/go.sum	(revision e939d6969817a944f1de970ced8efae9cdbd4407)
+++ b/go.sum	(date 1644373114809)
@@ -2,13 +2,17 @@
 github.com/andybalholm/cascadia v1.1.0/go.mod h1:GsXiBklL0woXo1j/WYWtSYYC4ouU9PqHO0sqidkEA4Y=
 github.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=
 github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
+github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=
 github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
+github.com/denisenkom/go-mssqldb v0.0.0-20191124224453-732737034ffd h1:83Wprp6ROGeiHFAP8WJdI2RoxALQYgdllERc3N5N2DM=
 github.com/denisenkom/go-mssqldb v0.0.0-20191124224453-732737034ffd/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=
+github.com/erikstmartin/go-testdb v0.0.0-20160219214506-8d10e4a1bae5 h1:Yzb9+7DPaBjB8zlTR87/ElzFsnQfuHnVUVqpZZIcV5Y=
 github.com/erikstmartin/go-testdb v0.0.0-20160219214506-8d10e4a1bae5/go.mod h1:a2zkGnVExMxdzMo3M0Hi/3sEU+cWnZpSni0O6/Yb/P0=
 github.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=
 github.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=
 github.com/gin-gonic/gin v1.7.7 h1:3DoBmSbJbZAWqXJC3SLjAPfutPJJRN1U5pALB7EeTTs=
 github.com/gin-gonic/gin v1.7.7/go.mod h1:axIBovoeJpVj8S3BwE0uPMTeReE4+AfFtqpqaZ1qq1U=
+github.com/go-playground/assert/v2 v2.0.1 h1:MsBgLAaY856+nPRTKrp3/OZK38U/wa0CcBYNjji3q3A=
 github.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=
 github.com/go-playground/locales v0.13.0/go.mod h1:taPMhCMXrRLJO55olJkUXHZBHCxTMfnGwq/HNwmWNS8=
 github.com/go-playground/locales v0.14.0 h1:u50s323jtVGugKlcYeyzC0etD1HifMjqmJqb8WugfUU=
@@ -21,11 +25,13 @@
 github.com/go-playground/validator/v10 v10.10.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=
 github.com/go-sql-driver/mysql v1.5.0 h1:ozyZYNQW3x3HtqT1jira07DN2PArx2v7/mN66gGcHOs=
 github.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=
+github.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe h1:lXe2qZdvpiX5WZkZR4hgp4KJVfY3nMkvmwbVkpv1rVY=
 github.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=
 github.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=
 github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=
 github.com/golang/protobuf v1.5.2 h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=
 github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=
+github.com/google/go-cmp v0.5.5 h1:Khx7svrCpmxxtHBq5j2mp/xVjsi8hQMfNLvJFAlrGgU=
 github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
 github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=
 github.com/google/uuid v1.0.0 h1:b4Gk+7WdP/d3HZH8EJsZpvV7EtDOgaZLtnaNGIu1adA=
@@ -34,23 +40,28 @@
 github.com/jinzhu/gorm v1.9.16/go.mod h1:G3LB3wezTOWM2ITLzPxEXgSkOXAntiLHS7UdBefADcs=
 github.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=
 github.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=
+github.com/jinzhu/now v1.0.1 h1:HjfetcXq097iXP0uoPCdnM4Efp5/9MsM0/M+XOTeR3M=
 github.com/jinzhu/now v1.0.1/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=
 github.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
 github.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=
 github.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=
 github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=
 github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=
+github.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=
 github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=
 github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=
 github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=
+github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
 github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=
 github.com/leodido/go-urn v1.2.0/go.mod h1:+8+nEpDfqqsY+g338gtMEUOtuK+4dEMhiQEgxpxOKII=
 github.com/leodido/go-urn v1.2.1 h1:BqpAaACuzVSgi/VLzGZIobT2z4v53pjosyNd9Yv6n/w=
 github.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=
+github.com/lib/pq v1.1.1 h1:sJZmqHoEaY7f+NPP8pgLB/WxulyR3fewgCM2qaSlBb4=
 github.com/lib/pq v1.1.1/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=
 github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=
 github.com/mattn/go-isatty v0.0.14 h1:yVuAays6BHfxijgZPzw+3Zlu5yQgKGP2/hcQbHb7S9Y=
 github.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=
+github.com/mattn/go-sqlite3 v1.14.0 h1:mLyGNKR8+Vv9CAU7PphKa2hkEqxxhn8i32J6FPj1/QA=
 github.com/mattn/go-sqlite3 v1.14.0/go.mod h1:JIl7NbARA7phWnGvh0LKTyg7S9BA+6gx71ShQilpsus=
 github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=
 github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=
@@ -61,13 +72,16 @@
 github.com/pborman/uuid v1.2.1 h1:+ZZIw58t/ozdjRaXh/3awHfmWRbzYxJoAdNJxe/3pvw=
 github.com/pborman/uuid v1.2.1/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=
 github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=
+github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=
 github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
 github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=
+github.com/rogpeppe/go-internal v1.8.0 h1:FCbCCtXNOY3UtUuHUYaghJg4y7Fd14rXifAYUAtL9R8=
 github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=
 github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
 github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=
 github.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=
 github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
+github.com/stretchr/testify v1.7.0 h1:nwc3DEeHmmLAfoZucVR881uASk0Mfjw8xYJ99tb5CcY=
 github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
 github.com/ugorji/go v1.1.7/go.mod h1:kZn38zHttfInRq0xu/PH0az30d+z6vm202qpg1oXVMw=
 github.com/ugorji/go v1.2.6 h1:tGiWC9HENWE2tqYycIqFTNorMmFRVhNwCpDOpWqnk8E=
@@ -107,6 +121,7 @@
 golang.org/x/text v0.3.7 h1:olpwvP2KacW1ZWvsR7uQhoyTYvKAupfQrRGBFM352Gk=
 golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=
 golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
+golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543 h1:E7g+9GITq07hpfrRu66IVDexMakfv52eLZ2CXBWiKr4=
 golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
 google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=
 google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
@@ -114,6 +129,7 @@
 google.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
 gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
 gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
+gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=
 gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=
 gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=
 gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
@@ -121,4 +137,5 @@
 gopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=
 gopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=
 gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
+gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b h1:h8qDotaEPuJATrMmW04NCwg7v22aHH28wwpauUhK9Oo=
 gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
Index: go.mod
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module course-project\r\n\r\ngo 1.16\r\n\r\nrequire (\r\n\tgithub.com/gin-gonic/gin v1.7.7 // indirect\r\n\tgithub.com/go-playground/validator/v10 v10.10.0 // indirect\r\n\tgithub.com/golang/protobuf v1.5.2 // indirect\r\n\tgithub.com/jinzhu/gorm v1.9.16 // indirect\r\n\tgithub.com/jinzhu/inflection v1.0.0 // indirect\r\n\tgithub.com/json-iterator/go v1.1.12 // indirect\r\n\tgithub.com/mattn/go-isatty v0.0.14 // indirect\r\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\r\n\tgithub.com/pborman/uuid v1.2.1 // indirect\r\n\tgithub.com/ugorji/go v1.2.6 // indirect\r\n\tgolang.org/x/crypto v0.0.0-20220131195533-30dcbda58838 // indirect\r\n\tgolang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27 // indirect\r\n\tgolang.org/x/text v0.3.7 // indirect\r\n\tgoogle.golang.org/protobuf v1.27.1 // indirect\r\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.mod b/go.mod
--- a/go.mod	(revision e939d6969817a944f1de970ced8efae9cdbd4407)
+++ b/go.mod	(date 1644373114815)
@@ -3,15 +3,14 @@
 go 1.16
 
 require (
-	github.com/gin-gonic/gin v1.7.7 // indirect
+	github.com/gin-gonic/gin v1.7.7
 	github.com/go-playground/validator/v10 v10.10.0 // indirect
 	github.com/golang/protobuf v1.5.2 // indirect
-	github.com/jinzhu/gorm v1.9.16 // indirect
-	github.com/jinzhu/inflection v1.0.0 // indirect
+	github.com/jinzhu/gorm v1.9.16
 	github.com/json-iterator/go v1.1.12 // indirect
 	github.com/mattn/go-isatty v0.0.14 // indirect
 	github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect
-	github.com/pborman/uuid v1.2.1 // indirect
+	github.com/pborman/uuid v1.2.1
 	github.com/ugorji/go v1.2.6 // indirect
 	golang.org/x/crypto v0.0.0-20220131195533-30dcbda58838 // indirect
 	golang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27 // indirect
